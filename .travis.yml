language: rust
sudo: false

rust:
- 1.31.0
- stable
- beta
- nightly

# REVIEW: needs to be tested on OSX

before_script:
- |
  pip install 'travis-cargo<0.2' --user &&
  export PATH=$HOME/.local/bin:$PATH
- if [ "${TRAVIS_RUST_VERSION}" = "nightly" ]; then
    rustup target add x86_64-fortanix-unknown-sgx;
    rustup target add x86_64-unknown-redox;
    rustup target add x86_64-unknown-cloudabi;
  fi

script:
- cd core;
- travis-cargo build;
- cd ../lock_api;
- travis-cargo build;
- cd ..;
- travis-cargo build
- travis-cargo test
- travis-cargo build -- --features serde
- travis-cargo test -- --features serde
- travis-cargo --only stable test -- --features=deadlock_detection
- travis-cargo --only beta test -- --features=deadlock_detection
- travis-cargo --only nightly test -- --all --no-run --target x86_64-fortanix-unknown-sgx
- travis-cargo --only nightly build -- --all --target x86_64-unknown-redox
- travis-cargo --only nightly build -- --all --target x86_64-unknown-cloudabi
- travis-cargo --only nightly doc -- --all-features --no-deps -p parking_lot -p parking_lot_core -p lock_api
- cd benchmark
- travis-cargo build
- cargo run --release --bin mutex -- 2 1 0 1 2
- cargo run --release --bin rwlock -- 1 1 1 0 1 2
- cd ..

# REVIEW: needs a test that parking_lot still builds when structured like
# libstd (aka including modules manually). This is easy to break by accident and
# CI should help that import paths and such are always organized correctly.

# REVIEW: needs at least one builder for all of `thread_parker` implementations
# (at least building it, executing it would be best), missing ones are wasm/OSX

env:
  global:
  - TRAVIS_CARGO_NIGHTLY_FEATURE=nightly
  - RUST_TEST_THREADS=1

notifications:
  email: false
